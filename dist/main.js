(()=>{"use strict";var e={348:(e,n,t)=>{t.d(n,{Z:()=>d});var r=t(15),o=t.n(r),i=t(645),a=t.n(i),c=t(667),s=t.n(c),l=t(180),A=a()(o()),u=s()(l);A.push([e.id,"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: Arial, Helvetica, sans-serif;\n  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.8), rgba(5, 5, 5, 0.6)),\n  url("+u+");\n  background-repeat: no-repeat;\n  background-size: cover;\n  height: 100vh;\n}\n\n#logo {\n  margin: 1rem 3rem;\n  font-size: 2rem;\n  font-family: monospace;\n  font-weight: bolder;\n  color: whitesmoke;\n}\n\nnav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\nnav ul {\n  display: flex;\n  justify-content: space-evenly;\n  width: 30%;\n}\n\nnav ul li {\n  list-style: none;\n  font-size: 1.2rem;\n  padding: 1rem 0.2rem;\n  color: #d4af37;\n  text-align: center;\n}\n\nnav ul li:hover {\n  cursor: pointer;\n  color: #C3C3C3;\n  border-bottom: 2px solid #d4af37;\n}\n\n#resto-details {\n  position: absolute;\n  top: 35%;\n  text-align: center;\n  width: 100%;\n  color: antiquewhite;\n}\n\n#resto-address {\n  font-size: 1.3rem;\n  font-style: italic;\n}\n\n#resto-slogan {\n  font-size: 7rem;\n}\n\n#resto-slogan span {\n  margin-right: 2rem;\n}\n","",{version:3,sources:["webpack://./src/homepage.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,yCAAyC;EACzC;yCACgC;EAChC,4BAA4B;EAC5B,sBAAsB;EACtB,aAAa;AACf;;AAEA;EACE,iBAAiB;EACjB,eAAe;EACf,sBAAsB;EACtB,mBAAmB;EACnB,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,6BAA6B;EAC7B,UAAU;AACZ;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;EACjB,oBAAoB;EACpB,cAAc;EACd,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,cAAc;EACd,gCAAgC;AAClC;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,kBAAkB;EAClB,WAAW;EACX,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,kBAAkB;AACpB",sourcesContent:["* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: Arial, Helvetica, sans-serif;\n  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.8), rgba(5, 5, 5, 0.6)),\n  url('./homepage-background.jpg');\n  background-repeat: no-repeat;\n  background-size: cover;\n  height: 100vh;\n}\n\n#logo {\n  margin: 1rem 3rem;\n  font-size: 2rem;\n  font-family: monospace;\n  font-weight: bolder;\n  color: whitesmoke;\n}\n\nnav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\nnav ul {\n  display: flex;\n  justify-content: space-evenly;\n  width: 30%;\n}\n\nnav ul li {\n  list-style: none;\n  font-size: 1.2rem;\n  padding: 1rem 0.2rem;\n  color: #d4af37;\n  text-align: center;\n}\n\nnav ul li:hover {\n  cursor: pointer;\n  color: #C3C3C3;\n  border-bottom: 2px solid #d4af37;\n}\n\n#resto-details {\n  position: absolute;\n  top: 35%;\n  text-align: center;\n  width: 100%;\n  color: antiquewhite;\n}\n\n#resto-address {\n  font-size: 1.3rem;\n  font-style: italic;\n}\n\n#resto-slogan {\n  font-size: 7rem;\n}\n\n#resto-slogan span {\n  margin-right: 2rem;\n}\n"],sourceRoot:""}]);const d=A},83:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(15),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([e.id,"#menu-wrapper {\n  width: 40%;\n  margin: 2rem auto;\n  background-color: whitesmoke;\n  opacity: 0.6;\n  text-align: center;\n  padding: 2rem;\n}\n\nh1 {\n  text-align: center;\n  color: whitesmoke;\n  margin-top: 0.5rem;\n}\n\n.menu-item {\n  margin: 1rem;\n  font-size: 1.5rem;\n}\n\n.hr {\n  margin-top: 1rem;\n}","",{version:3,sources:["webpack://./src/menu.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,iBAAiB;EACjB,4BAA4B;EAC5B,YAAY;EACZ,kBAAkB;EAClB,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,iBAAiB;AACnB;;AAEA;EACE,gBAAgB;AAClB",sourcesContent:["#menu-wrapper {\n  width: 40%;\n  margin: 2rem auto;\n  background-color: whitesmoke;\n  opacity: 0.6;\n  text-align: center;\n  padding: 2rem;\n}\n\nh1 {\n  text-align: center;\n  color: whitesmoke;\n  margin-top: 0.5rem;\n}\n\n.menu-item {\n  margin: 1rem;\n  font-size: 1.5rem;\n}\n\n.hr {\n  margin-top: 1rem;\n}"],sourceRoot:""}]);const c=a},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=e(n);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(e,t,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var c=0;c<e.length;c++){var s=[].concat(e[c]);r&&o[s[0]]||(t&&(s[2]?s[2]="".concat(t," and ").concat(s[2]):s[2]=t),n.push(s))}},n}},15:e=>{function n(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}e.exports=function(e){var t,r,o=(r=4,function(e){if(Array.isArray(e))return e}(t=e)||function(e,n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var t=[],r=!0,o=!1,i=void 0;try{for(var a,c=e[Symbol.iterator]();!(r=(a=c.next()).done)&&(t.push(a.value),!n||t.length!==n);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==c.return||c.return()}finally{if(o)throw i}}return t}}(t,r)||function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[1],a=o[3];if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),l="/*# ".concat(s," */"),A=a.sources.map((function(e){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(e," */")}));return[i].concat(A).concat([l]).join("\n")}return[i].join("\n")}},667:e=>{e.exports=function(e,n){return n||(n={}),"string"!=typeof(e=e&&e.__esModule?e.default:e)?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e)}},379:(e,n,t)=>{var r,o=function(){var e={};return function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}e[n]=t}return e[n]}}(),i=[];function a(e){for(var n=-1,t=0;t<i.length;t++)if(i[t].identifier===e){n=t;break}return n}function c(e,n){for(var t={},r=[],o=0;o<e.length;o++){var c=e[o],s=n.base?c[0]+n.base:c[0],l=t[s]||0,A="".concat(s," ").concat(l);t[s]=l+1;var u=a(A),d={css:c[1],media:c[2],sourceMap:c[3]};-1!==u?(i[u].references++,i[u].updater(d)):i.push({identifier:A,updater:f(d,n),references:1}),r.push(A)}return r}function s(e){var n=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var i=t.nc;i&&(r.nonce=i)}if(Object.keys(r).forEach((function(e){n.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(n);else{var a=o(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}return n}var l,A=(l=[],function(e,n){return l[e]=n,l.filter(Boolean).join("\n")});function u(e,n,t,r){var o=t?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=A(n,o);else{var i=document.createTextNode(o),a=e.childNodes;a[n]&&e.removeChild(a[n]),a.length?e.insertBefore(i,a[n]):e.appendChild(i)}}function d(e,n,t){var r=t.css,o=t.media,i=t.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var p=null,m=0;function f(e,n){var t,r,o;if(n.singleton){var i=m++;t=p||(p=s(n)),r=u.bind(null,t,i,!1),o=u.bind(null,t,i,!0)}else t=s(n),r=d.bind(null,t,n),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)};return r(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;r(e=n)}else o()}}e.exports=function(e,n){(n=n||{}).singleton||"boolean"==typeof n.singleton||(n.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var t=c(e=e||[],n);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<t.length;r++){var o=a(t[r]);i[o].references--}for(var s=c(e,n),l=0;l<t.length;l++){var A=a(t[l]);0===i[A].references&&(i[A].updater(),i.splice(A,1))}t=s}}}},180:(e,n,t)=>{e.exports=t.p+"b6686fa8687085077c3a.jpg"}},n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),(()=>{var e=t(379),n=t.n(e),r=t(348);function o(){const e=document.createElement("div"),n=document.createElement("p"),t=document.createElement("p"),r=document.createElement("span"),o=document.createElement("span"),i=document.createElement("span");return e.appendChild(n),e.appendChild(t),t.appendChild(r),t.appendChild(o),t.appendChild(i),e.setAttribute("id","resto-details"),n.setAttribute("id","resto-address"),t.setAttribute("id","resto-slogan"),n.innerHTML="Kigali, KG 546 St, House No. 56",r.innerHTML="Eat -",o.innerHTML="Drink -",i.innerHTML="Chat",e}n()(r.Z,{insert:"head",singleton:!1}),r.Z.locals;var i=t(83);function a(e){document.querySelector(e).innerHTML=""}n()(i.Z,{insert:"head",singleton:!1}),i.Z.locals,function(){const e=document.querySelector("#content"),n=[document.querySelector("#home"),document.querySelector("#menu"),document.querySelector("#reservations")];e.appendChild(o()),n.forEach((n=>{n.addEventListener("click",(n=>{if("home"!==n.currentTarget.id){if("menu"===n.currentTarget.id){a("#content");const n=document.createElement("h1");n.innerHTML="Menu";const t=function(){const e=document.createElement("div");e.setAttribute("id","menu-wrapper");const n=[{name:"Sticky Stem Ginger Pudding",price:"$33.00"},{name:"Aunty Gloria’s Knickerbocker",price:"$13.00"},{name:"Chocolate Mélange for Two",price:"$24.00"},{name:"Earl Grey Panna Cotta",price:"$15.00"}];return n.forEach((t=>{const r=document.createElement("div"),o=document.createElement("p"),i=document.createElement("p"),a=document.createElement("p");r.setAttribute("class","menu-item"),a.setAttribute("class","hr"),o.innerHTML=t.name,i.innerHTML=t.price,a.innerHTML="----",r.appendChild(o),r.appendChild(i),n.indexOf(t)!==n.length-1&&r.appendChild(a),e.appendChild(r)})),e}();return e.appendChild(n),void e.appendChild(t)}if("reservations"===n.currentTarget.id){a("#content");const n=function(){const e=document.createElement("h1"),n=document.createElement("input"),t=document.createElement("input"),r=document.createElement("input"),o=document.createElement("input"),i=document.createElement("input"),a=document.createElement("form"),c=document.createElement("div");return n.setAttribute("type","text"),n.setAttribute("placeholder","Full Names"),t.setAttribute("type","text"),t.setAttribute("placeholder","Email"),r.setAttribute("type","number"),r.setAttribute("placeholder","Number Of People"),o.setAttribute("type","date"),o.setAttribute("placeholder","Date"),i.setAttribute("type","submit"),i.setAttribute("value","Reserve Table"),a.appendChild(n),a.appendChild(t),a.appendChild(r),a.appendChild(o),a.appendChild(i),c.appendChild(e),c.appendChild(a),e.innerHTML="Reserve Table",c}();e.appendChild(n)}}else{a("#content");const n=o();e.appendChild(n)}}))}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,